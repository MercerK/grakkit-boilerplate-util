{"version":3,"file":"index.js","mappings":"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","sources":["webpack://test/./node_modules/@grakkit/js/index.js","webpack://test/./node_modules/@grakkit/js/node_modules/@grakkit/stdlib/index.js","webpack://test/./node_modules/@grakkit/stdlib-paper/index.js","webpack://test/./node_modules/@grakkit/stdlib/index.js","webpack://test/webpack/bootstrap","webpack://test/webpack/runtime/define property getters","webpack://test/webpack/runtime/hasOwnProperty shorthand","webpack://test/webpack/runtime/make namespace object","webpack://test/./src/formatWebpackMessages.ts","webpack://test/./src/webServer.ts","webpack://test/./src/initializeAutoReload.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.format = exports.circular = exports.array = void 0;\nconst stdlib_1 = require(\"@grakkit/stdlib\");\nconst Class = stdlib_1.type('java.lang.Class');\nconst Iterable = stdlib_1.type('java.lang.Iterable');\nconst Iterator = stdlib_1.type('java.util.Iterator');\nconst Spliterator = stdlib_1.type('java.util.Spliterator');\n/** Converts array-like objects or iterators into arrays. */\nfunction array(object) {\n    if (object instanceof Array) {\n        return [...object];\n    }\n    else if (object instanceof Iterable) {\n        const output = [];\n        object.forEach((value) => {\n            output.push(value);\n        });\n        return output;\n    }\n    else if (object instanceof Iterator || object instanceof Spliterator) {\n        const output = [];\n        object.forEachRemaining((value) => {\n            output.push(value);\n        });\n        return output;\n    }\n    else {\n        return null;\n    }\n}\nexports.array = array;\n/** Internal value used to represent circular object references in formatted output. */\nexports.circular = Symbol();\n/** Formatting tools for script feedback. */\nexports.format = {\n    /** Reformats complex error messages into layman-friendly ones. */\n    error(error) {\n        let type = 'Error';\n        let message = `${error}`;\n        if (error.stack) {\n            type = error.stack.split('\\n')[0].split(' ')[0].slice(0, -1);\n            message = error.message;\n            switch (type) {\n                case 'TypeError':\n                    try {\n                        if (message.startsWith('invokeMember') || message.startsWith('execute on foreign object')) {\n                            const reason = message.split('failed due to: ')[1];\n                            if (reason.startsWith('no applicable overload found')) {\n                                const sets = reason.split('overloads:')[1].split(']],')[0].split(')]').map(set => {\n                                    return `(${set.split('(').slice(1).join('(')})`;\n                                });\n                                message = ['Invalid arguments! Expected:', ...sets].join('\\n -> ').slice(0, -1);\n                            }\n                            else if (reason.startsWith('Arity error')) {\n                                message = `Invalid argument amount! Expected: ${reason.split('-')[1].split(' ')[2]}`;\n                            }\n                            else if (reason.startsWith('UnsupportedTypeException')) {\n                                message = 'Invalid arguments!';\n                            }\n                            else if (reason.startsWith('Unknown identifier')) {\n                                message = `That method (${reason.split(': ')[1]}) does not exist!`;\n                            }\n                            else if (reason.startsWith('Message not supported')) {\n                                message = `That method (${message.slice(14).split(')')[0]}) does not exist!`;\n                            }\n                            else {\n                                message = message.split('\\n')[0];\n                            }\n                        }\n                    }\n                    catch (error) {\n                        message = message.split('\\n')[0];\n                    }\n                    break;\n                case 'SyntaxError':\n                    message = message.split(' ').slice(1).join(' ').split('\\n')[0];\n            }\n        }\n        else {\n            error = `${error}`;\n            type = error.split(' ')[0].slice(0, -1);\n            message = error.split(' ').slice(1).join(' ');\n        }\n        return `${type}: ${message}`;\n    },\n    /** A pretty-printer for JavaScript objects. */\n    output(object, condense) {\n        if (condense === true) {\n            if (object === exports.circular) {\n                return '...';\n            }\n            else {\n                const type = toString.call(object);\n                switch (type) {\n                    case '[object Array]':\n                    case '[object Object]':\n                    case '[object Function]':\n                        return type.split(' ')[1].slice(0, -1);\n                    case '[foreign HostObject]':\n                        if (object instanceof Class && typeof object.getCanonicalName === 'function') {\n                            return object.getCanonicalName();\n                        }\n                        else if (typeof object.toString === 'function') {\n                            const string = object.toString();\n                            if (string) {\n                                return string;\n                            }\n                        }\n                        const clazz = typeof object.getClass === 'function' ? object.getClass() : object.class;\n                        if (clazz instanceof Class && typeof clazz.getCanonicalName === 'function') {\n                            return clazz.getCanonicalName();\n                        }\n                        else {\n                            return `${object}` || `${clazz}` || 'Object';\n                        }\n                    case '[foreign HostFunction]':\n                        return 'Function';\n                    default:\n                        switch (typeof object) {\n                            case 'bigint':\n                                return object.toString() + 'n';\n                            case 'function':\n                                return 'Function';\n                            case 'object':\n                                return object ? 'Object' : 'null';\n                            case 'symbol':\n                                return `<${object.toString().slice(7, -1)}>`;\n                            case 'undefined':\n                                return 'undefined';\n                            default:\n                                return JSON.stringify(object);\n                        }\n                }\n            }\n        }\n        else {\n            switch (toString.call(object)) {\n                case '[object Array]':\n                    return `[ ${[...object]\n                        .map((value) => exports.format.output(object === value ? exports.circular : value, true))\n                        .join(', ')} ]`;\n                case '[object Object]':\n                    return `{ ${[\n                        ...Object.getOwnPropertyNames(object).map(key => {\n                            return `${key}: ${exports.format.output(object === object[key] ? exports.circular : object[key], true)}`;\n                        }),\n                        ...Object.getOwnPropertySymbols(object).map(key => {\n                            return `${exports.format.output(key, true)}: ${exports.format.output(object === object[key] ? exports.circular : object[key], true)}`;\n                        })\n                    ].join(', ')} }`;\n                case '[object Function]':\n                    if (object instanceof Class && typeof object.getCanonicalName === 'function') {\n                        return object.getCanonicalName();\n                    }\n                    else if (typeof object.toString === 'function') {\n                        return stdlib_1.regex.replace(object.toString(), '\\\\r', '');\n                    }\n                    else {\n                        return `${object}` || 'function () { [native code] }';\n                    }\n                case '[foreign HostFunction]':\n                    return 'hostFunction () { [native code] }';\n                default:\n                    const list = array(object);\n                    if (list) {\n                        return exports.format.output(list);\n                    }\n                    else {\n                        return exports.format.output(object, true);\n                    }\n            }\n        }\n    }\n};\nstdlib_1.command({\n    name: 'js',\n    permission: 'grakkit.command.js',\n    message: `\\xa7cYou do not have the required permission to run this command!`,\n    execute(context, ...args) {\n        const self = globalThis.hasOwnProperty('self');\n        self || (globalThis.self = context);\n        let output;\n        try {\n            const result = Polyglot.eval('js', args.join(' '));\n            self || delete globalThis.self;\n            output = exports.format.output(result);\n        }\n        catch (whoops) {\n            self || delete globalThis.self;\n            output = exports.format.error(whoops);\n        }\n        switch (stdlib_1.env.name) {\n            case 'bukkit':\n                context.sendMessage(output);\n                break;\n            case 'minestom':\n                context.sendMessage(output);\n                break;\n        }\n    },\n    tabComplete(context, ...args) {\n        let body = '';\n        let index = -1;\n        let scope = globalThis;\n        let valid = true;\n        let string = false;\n        let bracket = false;\n        let comment = false;\n        let property = '';\n        const input = args.join(' ');\n        while (valid && ++index < input.length) {\n            const char = input[index];\n            if (comment) {\n                if (char === '*' && input[index + 1] === '/') {\n                    if (property) {\n                        input[index + 2] === ';' && (comment = false);\n                    }\n                    else {\n                        body = input.slice(0, index + 2);\n                        comment = false;\n                    }\n                }\n            }\n            else if (string) {\n                if (char === '\\\\') {\n                    ++index;\n                }\n                else if (char === string) {\n                    scope = {};\n                    string = false;\n                }\n            }\n            else if (bracket === true) {\n                [\"'\", '\"', '`'].includes(char) ? (bracket = char) : (valid = false);\n            }\n            else if (typeof bracket === 'string') {\n                switch (char) {\n                    case '\\\\':\n                        ++index;\n                        break;\n                    case bracket:\n                        bracket = -1;\n                        break;\n                    default:\n                        property += char;\n                }\n            }\n            else {\n                switch (char) {\n                    case '/':\n                        switch (input[index + 1]) {\n                            case '/':\n                                valid = false;\n                                break;\n                            case '*':\n                                comment = true;\n                                break;\n                        }\n                        break;\n                    case \"'\":\n                    case '\"':\n                    case '`':\n                        bracket === -1 ? (valid = false) : (string = char);\n                        break;\n                    case ')':\n                    case '{':\n                    case '}':\n                        bracket || (scope = {});\n                        break;\n                    case '.':\n                    case '[':\n                        if (!bracket) {\n                            if (char === '.' || property) {\n                                body = input.slice(0, index + 1);\n                                if (scope === globalThis && property === 'self' && !scope.hasOwnProperty('self')) {\n                                    scope = context;\n                                }\n                                else {\n                                    scope = scope[property] || {};\n                                }\n                                char === '.' || (bracket = true);\n                                property = '';\n                            }\n                            else {\n                                body = input.slice(0, index + 1);\n                                scope = globalThis;\n                            }\n                        }\n                        break;\n                    case ']':\n                        bracket === -1 && (bracket = false);\n                        break;\n                    case '\\\\':\n                        typeof bracket === 'string' ? ++index : (valid = false);\n                        break;\n                    case ' ':\n                        property ? (valid = false) : (body = '');\n                        break;\n                    default:\n                        if (stdlib_1.regex.test(char, '[\\\\+\\\\-\\\\*\\\\/\\\\^=!&\\\\|\\\\?:\\\\(,;]')) {\n                            if (!bracket) {\n                                body = input.slice(0, index + 1);\n                                scope = globalThis;\n                                property = '';\n                            }\n                        }\n                        else {\n                            property += char;\n                        }\n                }\n            }\n        }\n        if (valid && scope && !(comment || string)) {\n            const properties = [\n                ...Object.getOwnPropertyNames(scope.constructor ? scope.constructor.prototype || {} : {}),\n                ...Object.getOwnPropertyNames(scope)\n            ];\n            scope === globalThis && !properties.includes('self') && properties.push('self');\n            return properties\n                .sort()\n                .filter(element => element.toLowerCase().includes(property.toLowerCase()))\n                .filter(name => bracket || stdlib_1.regex.test(name, '[_A-Za-z$][_0-9A-Za-z$]*'))\n                .map(name => {\n                if (bracket) {\n                    return `${body}\\`${stdlib_1.regex.replace(name, '`', '\\\\`').split('\\\\').join('\\\\\\\\')}\\`]`;\n                }\n                else {\n                    return `${body}${name}`;\n                }\n            });\n        }\n        else {\n            return [];\n        }\n    }\n});\n","\"use strict\";\n/// <reference path=\"./scope.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sync = exports.simplify = exports.root = exports.reload = exports.regex = exports.push = exports.load = exports.file = exports.fetch = exports.event = exports.env = exports.data = exports.context = exports.task = exports.command = exports.chain = exports.async = exports.type = exports.session = void 0;\nif ('Grakkit' in globalThis) {\n    Object.assign(globalThis, { Core: Grakkit });\n}\nelse if ('Core' in globalThis) {\n    Object.assign(globalThis, { Grakkit: Core });\n}\nelse {\n    throw 'Grakkit was not detected in your current environment!';\n}\n/** A session container for this module. */\nexports.session = {\n    data: new Map(),\n    event: new Map(),\n    load: new Map(),\n    poly: { index: 0, list: new Map() },\n    task: { list: new Set(), tick: 0 },\n    type: new Map()\n};\n/** Imports the specified type from java. */\nfunction type(name) {\n    if (exports.session.type.has(name)) {\n        return exports.session.type.get(name);\n    }\n    else {\n        const value = Java.type(name);\n        exports.session.type.set(name, value);\n        return value;\n    }\n}\nexports.type = type;\nconst Files = type('java.nio.file.Files');\nconst JavaString = type('java.lang.String');\nconst Paths = type('java.nio.file.Paths');\nconst Pattern = type('java.util.regex.Pattern');\nconst Scanner = type('java.util.Scanner');\nconst URL = type('java.net.URL');\nconst UUID = type('java.util.UUID');\n/** Runs a task off the main server thread. */\nfunction async(script) {\n    switch (exports.env.name) {\n        case 'bukkit':\n            return new Promise((resolve, reject) => {\n                exports.env.content.server.getScheduler().runTaskAsynchronously(exports.env.content.plugin, new exports.env.content.Runnable(async () => {\n                    try {\n                        resolve(await script());\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }));\n            });\n        case 'minestom':\n            return new Promise(async (resolve, reject) => {\n                try {\n                    resolve(await script());\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n    }\n}\nexports.async = async;\n/** It's even more complicated. */\nfunction chain(input, handler) {\n    const loop = (input) => handler(input, loop);\n    return loop(input);\n}\nexports.chain = chain;\n/** Registers a custom command to the server. */\nfunction command(options) {\n    switch (exports.env.name) {\n        case 'bukkit': {\n            exports.env.content.plugin.register(options.namespace || exports.env.content.plugin.getName(), options.name, options.aliases || [], options.permission || '', options.message || '', (sender, label, args) => {\n                try {\n                    if (!options.permission || sender.hasPermission(options.permission)) {\n                        options.execute && options.execute(sender, ...args);\n                    }\n                    else {\n                        sender.sendMessage(options.message || '');\n                    }\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to execute the \"${label}\" command!`);\n                    console.error(error.stack || error.message || error);\n                }\n            }, (sender, alias, args) => {\n                try {\n                    return (options.tabComplete && options.tabComplete(sender, ...args)) || [];\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to tab-complete the \"${alias}\" command!`);\n                    console.error(error.stack || error.message || error);\n                    return [];\n                }\n            });\n            break;\n        }\n        case 'minestom': {\n            const command = new exports.env.content.Command(options.name);\n            command.addSyntax((sender, context) => {\n                try {\n                    options.execute && options.execute(sender, ...context.getInput().split(' ').slice(1));\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to execute the \"${options.name}\" command!`);\n                    console.error(error.stack || error.message || error);\n                }\n            }, exports.env.content.ArgumentType\n                .StringArray('tab-complete')\n                .setSuggestionCallback((sender, context, suggestion) => {\n                for (const completion of options.tabComplete(sender, ...context.getInput().split(' ').slice(1)) ||\n                    []) {\n                    suggestion.addEntry(new exports.env.content.SuggestionEntry(completion));\n                }\n            }));\n            exports.env.content.registry.register(command);\n        }\n    }\n}\nexports.command = command;\n/** A simple task scheduler. */\nexports.task = {\n    /** Cancels a previously scheduled task. */\n    cancel(handle) {\n        exports.session.task.list.delete(handle);\n    },\n    /** Schedules a task to run infinitely at a set interval. */\n    interval(script, period = 0, ...args) {\n        const future = exports.task.timeout((...args) => {\n            future.tick += Math.ceil(period < 1 ? 1 : period);\n            script(...args);\n        }, 0, ...args);\n        return future;\n    },\n    /** Schedules a task to run after a set timeout. */\n    timeout(script, period = 0, ...args) {\n        const future = { tick: exports.session.task.tick + Math.ceil(period < 0 ? 0 : period), args, script };\n        exports.session.task.list.add(future);\n        return future;\n    }\n};\nexports.context = (() => {\n    try {\n        const meta = Grakkit.getMeta();\n        /* grakkit v5 detected */\n        return {\n            /** Creates a new context and returns its instance. If `type` is file, `content` refers to a JS file path relative to the JS root folder. If `type` is script, `content` refers to a piece of JS code. */\n            create(type, content, meta) {\n                return Grakkit[`${type}Instance`](content, meta);\n            },\n            /** Destroys the currently running context. */\n            destroy() {\n                Grakkit.destroy();\n            },\n            emit(channel, message) {\n                Grakkit.emit(channel, message);\n            },\n            meta,\n            off(channel, listener) {\n                return Grakkit.off(channel, listener);\n            },\n            on: ((channel, listener) => {\n                if (listener) {\n                    return Grakkit.on(channel, listener);\n                }\n                else {\n                    return Grakkit.on(channel);\n                }\n            })\n        };\n    }\n    catch (error) {\n        /* grakkit v4 detected */\n        const channels = {};\n        const messages = [];\n        exports.task.interval(() => {\n            for (const message of messages.splice(0, messages.length)) {\n                if (message.channel in channels) {\n                    for (const listener of channels[message.channel]) {\n                        try {\n                            listener(message.content);\n                        }\n                        catch (error) {\n                            console.error('An error occured while attempting to listen for a message!');\n                            console.error(error.stack || error.message || error);\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            create() {\n                throw 'Your current version of Grakkit does not support creating new contexts!';\n            },\n            destroy() {\n                throw 'The primary instance cannot be destroyed!';\n            },\n            emit(channel, content) {\n                messages.push({ channel, content });\n            },\n            meta: 'grakkit',\n            off(channel, listener) {\n                if (channel in channels) {\n                    const list = channels[channel];\n                    list.includes(listener) && list.splice(list.indexOf(listener), 1);\n                }\n            },\n            on: ((channel, listener) => {\n                if (listener) {\n                    channels[channel] || (channels[channel] = []).push(listener);\n                }\n                else {\n                    return new Promise(resolve => {\n                        const dummy = (data) => {\n                            exports.context.off(channel, dummy);\n                            resolve(data);\n                        };\n                        exports.context.on(channel, dummy);\n                    });\n                }\n            })\n        };\n    }\n})();\n/** Stores data on a per-path basis. */\nfunction data(path, ...more) {\n    const name = Paths.get(path, ...more).normalize().toString();\n    if (exports.session.data.has(name)) {\n        return exports.session.data.get(name);\n    }\n    else {\n        const value = file(exports.root, 'data', `${name}.json`).json() || {};\n        exports.session.data.set(name, value);\n        return value;\n    }\n}\nexports.data = data;\n/** The environment that this module is currently running in. */\nexports.env = (() => {\n    try {\n        //@ts-expect-error\n        const Bukkit = type('org.bukkit.Bukkit');\n        /* bukkit detected */\n        const manager = Bukkit.getPluginManager();\n        const plugin = manager.getPlugin('grakkit');\n        Grakkit.hook(() => {\n            //@ts-expect-error\n            type('org.bukkit.event.HandlerList').unregisterAll(plugin);\n        });\n        return {\n            content: {\n                //@ts-expect-error\n                EventPriority: type('org.bukkit.event.EventPriority'),\n                //@ts-expect-error\n                instance: new (Java.extend(type('org.bukkit.event.Listener'), {}))(),\n                manager,\n                plugin,\n                Runnable: type('java.lang.Runnable'),\n                server: Bukkit.getServer()\n            },\n            name: 'bukkit'\n        };\n    }\n    catch (error) {\n        try {\n            //@ts-expect-error\n            const MinecraftServer = type('net.minestom.server.MinecraftServer');\n            /* minestom detected */\n            const manager = MinecraftServer.getExtensionManager();\n            const extension = manager.getExtension('grakkit');\n            return {\n                content: {\n                    //@ts-expect-error\n                    ArgumentType: type('net.minestom.server.command.builder.arguments.ArgumentType'),\n                    //@ts-expect-error\n                    Command: type('net.minestom.server.command.builder.Command'),\n                    extension,\n                    manager,\n                    node: extension.getEventNode(),\n                    registry: MinecraftServer.getCommandManager(),\n                    server: MinecraftServer,\n                    //@ts-expect-error\n                    SuggestionEntry: type('net.minestom.server.command.builder.suggestion.SuggestionEntry')\n                },\n                name: 'minestom'\n            };\n        }\n        catch (error) {\n            return { name: 'unknown', content: {} };\n        }\n    }\n})();\n/** Attaches one or more listeners to a server event. */\nfunction event(name, ...listeners) {\n    switch (exports.env.name) {\n        case 'bukkit':\n            {\n                let list;\n                if (exports.session.event.has(name)) {\n                    list = exports.session.event.get(name);\n                }\n                else {\n                    list = new Set();\n                    exports.session.event.set(name, list);\n                }\n                const targets = new Set();\n                for (const listener of listeners) {\n                    if (typeof listener === 'function') {\n                        targets.has('HIGHEST') || targets.add('HIGHEST');\n                    }\n                    else {\n                        targets.has(listener.priority) || targets.add(listener.priority);\n                    }\n                }\n                for (const listener of list) {\n                    if (typeof listener === 'function') {\n                        targets.has('HIGHEST') && targets.delete('HIGHEST');\n                    }\n                    else {\n                        targets.has(listener.priority) && targets.delete(listener.priority);\n                    }\n                }\n                for (const target of targets) {\n                    const emitter = type(name);\n                    exports.env.content.manager.registerEvent(\n                    // @ts-expect-error\n                    emitter.class, exports.env.content.instance, exports.env.content.EventPriority.valueOf(target), (x, signal) => {\n                        if (signal instanceof emitter) {\n                            try {\n                                for (const listener of list) {\n                                    if (typeof listener === 'function') {\n                                        target === 'HIGHEST' && listener(signal);\n                                    }\n                                    else {\n                                        target === listener.priority && listener.script(signal);\n                                    }\n                                }\n                            }\n                            catch (error) {\n                                console.error(`An error occured while attempting to handle the \"${name}\" event!`);\n                                console.error(error.stack || error.message || error);\n                            }\n                        }\n                    }, exports.env.content.plugin);\n                }\n                for (const listener of listeners)\n                    list.has(listener) || list.add(listener);\n            }\n            break;\n        case 'minestom':\n            {\n                let list;\n                if (exports.session.event.has(name)) {\n                    list = exports.session.event.get(name);\n                }\n                else {\n                    list = new Set();\n                    exports.session.event.set(name, list);\n                }\n                if (list.size === 0) {\n                    const emitter = type(name);\n                    // @ts-expect-error\n                    exports.env.content.node.addListener(emitter.class, (signal) => {\n                        try {\n                            for (const listener of list) {\n                                if (typeof listener === 'function') {\n                                    listener(signal);\n                                }\n                                else {\n                                    listener.script(signal);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            console.error(`An error occured while attempting to handle the \"${name}\" event!`);\n                            console.error(error.stack || error.message || error);\n                        }\n                    });\n                }\n                for (const listener of listeners)\n                    list.has(listener) || list.add(listener);\n            }\n            break;\n    }\n}\nexports.event = event;\n/** Sends a GET request to the given URL. */\nfunction fetch(link) {\n    const response = {\n        json(async) {\n            if (async) {\n                return response.read(true).then(content => JSON.parse(content));\n            }\n            else {\n                try {\n                    return JSON.parse(response.read());\n                }\n                catch (error) {\n                    throw error;\n                }\n            }\n        },\n        //@ts-expect-error\n        read(async) {\n            if (async) {\n                return new Promise(async (resolve) => {\n                    const uuid = UUID.randomUUID().toString();\n                    exports.context.on(uuid).then(content => {\n                        resolve(content);\n                    });\n                    exports.context\n                        .create('file', `${base}/async.js`, JSON.stringify({ link, operation: 'fetch.read', uuid }))\n                        .open();\n                });\n            }\n            else {\n                return new Scanner(response.stream()).useDelimiter('\\\\A').next();\n            }\n        },\n        stream() {\n            return new URL(link).openStream();\n        }\n    };\n    return response;\n}\nexports.fetch = fetch;\n/** A utility wrapper for paths and files. */\nfunction file(path, ...more) {\n    path = typeof path === 'string' ? path : 'io' in path ? path.path : path.getPath();\n    const io = Paths.get(path, ...more).normalize().toFile();\n    const record = {\n        get children() {\n            return record.type === 'folder' ? [...io.listFiles()].map(sub => file(sub.getPath())) : null;\n        },\n        directory() {\n            if (record.type === 'none') {\n                chain(io, (io, loop) => {\n                    const parent = io.getParentFile();\n                    parent && (parent.exists() || loop(parent));\n                    io.mkdir();\n                });\n            }\n            return record;\n        },\n        entry() {\n            record.type === 'none' && record.parent.directory() && io.createNewFile();\n            return record;\n        },\n        get exists() {\n            return io.exists();\n        },\n        file(...path) {\n            return file(io, ...path);\n        },\n        flush() {\n            chain(io, (io, loop) => {\n                const parent = io.getParentFile();\n                parent && parent.isDirectory() && (parent.listFiles()[0] || (parent.delete() && loop(parent)));\n            });\n            return record;\n        },\n        io,\n        json(async) {\n            if (async) {\n                return record.read(true).then(content => JSON.parse(content));\n            }\n            else {\n                try {\n                    return JSON.parse(record.read());\n                }\n                catch (error) {\n                    return null;\n                }\n            }\n        },\n        get name() {\n            return io.getName();\n        },\n        get parent() {\n            return record.file('..');\n        },\n        get path() {\n            return exports.regex.replace(io.getPath(), '(\\\\\\\\)', '/');\n        },\n        //@ts-expect-error\n        read(async) {\n            if (async) {\n                return new Promise(async (resolve) => {\n                    const uuid = UUID.randomUUID().toString();\n                    exports.context.on(uuid).then(content => {\n                        resolve(content);\n                    });\n                    exports.context\n                        .create('file', `${base}/async.js`, JSON.stringify({ path: record.path, operation: 'file.read', uuid }))\n                        .open();\n                });\n            }\n            else {\n                return record.type === 'file' ? new JavaString(Files.readAllBytes(io.toPath())).toString() : null;\n            }\n        },\n        remove() {\n            chain(io, (io, loop) => {\n                io.isDirectory() && [...io.listFiles()].forEach(loop);\n                io.exists() && io.delete();\n            });\n            return record.flush();\n        },\n        get type() {\n            return io.isDirectory() ? 'folder' : io.exists() ? 'file' : 'none';\n        },\n        //@ts-expect-error\n        write(content, async) {\n            if (async) {\n                return new Promise(async (resolve) => {\n                    const uuid = UUID.randomUUID().toString();\n                    exports.context.on(uuid).then(() => {\n                        resolve(record);\n                    });\n                    exports.context\n                        .create('file', `${base}/async.js`, JSON.stringify({ content, path: record.path, operation: 'file.write', uuid }))\n                        .open();\n                });\n            }\n            else {\n                record.type === 'file' && Files.write(io.toPath(), new JavaString(content).getBytes());\n                return record;\n            }\n        }\n    };\n    return record;\n}\nexports.file = file;\n/** Imports classes from external files. */\nfunction load(path, name) {\n    if (exports.session.load.has(name)) {\n        return exports.session.load.get(name);\n    }\n    else {\n        const source = file(path);\n        if (source.exists) {\n            const value = Grakkit.load(source.io, name);\n            exports.session.load.set(name, value);\n            return value;\n        }\n        else {\n            throw new ReferenceError(`The file \"${source.path}\" does not exist!`);\n        }\n    }\n}\nexports.load = load;\n/** Runs a script on the next tick. */\nfunction push(script) {\n    Grakkit.push(script);\n}\nexports.push = push;\n/** Tools for using regex patterns. */\nexports.regex = {\n    test(input, expression) {\n        //@ts-expect-error\n        return input.matches(expression);\n    },\n    replace(input, expression, replacement) {\n        //@ts-expect-error\n        return Pattern.compile(expression).matcher(input).replaceAll(replacement);\n    }\n};\n/** Reloads the JS environment. */\nfunction reload() {\n    push(Grakkit.swap);\n}\nexports.reload = reload;\n/** The root folder of the environment. */\nexports.root = file(Grakkit.getRoot());\n/** Recursively removes or replaces the circular references in an object. */\nfunction simplify(object, placeholder, objects) {\n    if (object && typeof object === 'object') {\n        objects || (objects = new Set());\n        if (objects.has(object)) {\n            return placeholder;\n        }\n        else {\n            objects.add(object);\n            const output = typeof object[Symbol.iterator] === 'function' ? [] : {};\n            for (const key in object)\n                output[key] = simplify(object[key], placeholder, new Set(objects));\n            return output;\n        }\n    }\n    else {\n        return object;\n    }\n}\nexports.simplify = simplify;\nfunction sync(script) {\n    return new Promise((resolve, reject) => {\n        Grakkit.sync(() => script().then(resolve).catch(reject));\n    });\n}\nexports.sync = sync;\nchain(void 0, (none, next) => {\n    Grakkit.push(next);\n    for (const task of exports.session.task.list) {\n        if (exports.session.task.tick > task.tick) {\n            exports.session.task.list.delete(task);\n        }\n        else if (exports.session.task.tick === task.tick) {\n            try {\n                task.script(...task.args);\n            }\n            catch (error) {\n                console.error('An error occured while attempting to execute a task!');\n                console.error(error.stack || error.message || error);\n            }\n        }\n    }\n    ++exports.session.task.tick;\n});\nGrakkit.hook(() => {\n    for (const [name] of exports.session.data) {\n        file(exports.root, 'data', `${name}.json`).entry().write(JSON.stringify(simplify(exports.session.data.get(name))));\n    }\n});\nconst base = __dirname;\nconst charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst promise = Promise.resolve();\nObject.assign(globalThis, {\n    atob(data) {\n        var str = exports.regex.replace(String(data), '[=]+$', '');\n        if (str.length % 4 === 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (var bc = 0, bs, buffer, idx = 0, output = ''; (buffer = str.charAt(idx++)); ~buffer && ((bs = bc % 4 ? bs * 64 + buffer : buffer), bc++ % 4)\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0) {\n            buffer = charset.indexOf(buffer);\n        }\n        return output;\n    },\n    btoa(data) {\n        var str = String(data);\n        for (var block, charCode, idx = 0, map = charset, output = ''; str.charAt(idx | 0) || ((map = '='), idx % 1); output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))) {\n            charCode = str.charCodeAt((idx += 3 / 4));\n            if (charCode > 0xff) {\n                throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n            }\n            block = (block << 8) | charCode;\n        }\n        return output;\n    },\n    clearImmediate(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    clearInterval(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    clearTimeout(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    queueMicrotask(callback) {\n        promise.then(callback).catch(error => {\n            exports.task.timeout(() => {\n                throw error;\n            });\n        });\n    },\n    setInterval(script, period = 0, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.interval(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, Math.ceil(period / 50), ...args));\n        return exports.session.poly.index++;\n    },\n    setTimeout(script, period = 0, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.timeout(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, Math.ceil(period / 50), ...args));\n        return exports.session.poly.index++;\n    },\n    setImmediate(script, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.timeout(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, 0, ...args));\n        return exports.session.poly.index++;\n    }\n});\n","const base = require('@grakkit/stdlib');\nbase.context.meta === 'grakkit' && require('@grakkit/js');\n\nconst addons = {\n   manager: base.env.content.manager,\n   plugin: base.env.content.plugin,\n   server: base.env.content.server\n};\n\nconst stdlib = Object.assign({}, base, addons);\n\nObject.assign(globalThis, addons, { core: stdlib });\n\nmodule.exports = stdlib;\n","\"use strict\";\n/// <reference path=\"./scope.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sync = exports.simplify = exports.root = exports.reload = exports.regex = exports.push = exports.load = exports.file = exports.fetch = exports.event = exports.env = exports.data = exports.context = exports.task = exports.command = exports.chain = exports.desync = exports.type = exports.session = void 0;\nif ('Grakkit' in globalThis) {\n    Object.assign(globalThis, { Core: Grakkit });\n}\nelse if ('Core' in globalThis) {\n    Object.assign(globalThis, { Grakkit: Core });\n}\nelse if ('Polyglot' in globalThis) {\n    throw 'Grakkit was not detected (or is very outdated) in your environment!';\n}\nelse if ('Java' in globalThis) {\n    throw 'GraalJS was not detected in your environment!';\n}\nelse {\n    throw 'Java was not detected in your environment!';\n}\n/** A session container for this module. */\nexports.session = {\n    data: new Map(),\n    event: new Map(),\n    load: new Map(),\n    poly: { index: 0, list: new Map() },\n    task: { list: new Set(), tick: 0 },\n    type: new Map()\n};\n/** Imports the specified type from java. */\nfunction type(name) {\n    if (exports.session.type.has(name)) {\n        return exports.session.type.get(name);\n    }\n    else {\n        const value = Java.type(name);\n        exports.session.type.set(name, value);\n        return value;\n    }\n}\nexports.type = type;\nconst Files = type('java.nio.file.Files');\nconst JavaString = type('java.lang.String');\nconst Paths = type('java.nio.file.Paths');\nconst Pattern = type('java.util.regex.Pattern');\nconst Scanner = type('java.util.Scanner');\nconst URL = type('java.net.URL');\nconst UUID = type('java.util.UUID');\n/** A system which simplifies asynchronous cross-context code execution. */\nexports.desync = {\n    /** Provides the result to a desync request within an auxilliary file. If this method is called while not within a desync-compatible context, it will fail. */\n    async provide(provider) {\n        try {\n            const { data, uuid } = JSON.parse(exports.context.meta);\n            try {\n                exports.context.emit(uuid, JSON.stringify({ data: await provider(data), status: true }));\n            }\n            catch (error) {\n                exports.context.emit(uuid, JSON.stringify({ data: error, status: false }));\n            }\n        }\n        catch (error) {\n            throw 'The current context\\'s metadata is incompatible with the desync system!';\n        }\n    },\n    /** Sends a desync request to another file. If said file has a valid desync provider, that provider will be triggered and a response will be sent back when ready. */\n    async request(path, data = {}) {\n        const script = file(path);\n        if (script.exists) {\n            const uuid = UUID.randomUUID().toString();\n            const promise = exports.context.on(uuid);\n            exports.context.create('file', file(path).io.getAbsolutePath(), JSON.stringify({ data, uuid })).open();\n            const response = JSON.parse(await promise);\n            if (response.status)\n                return response.data;\n            else\n                throw response.data;\n        }\n        else {\n            throw 'That file does not exist!';\n        }\n    },\n    /** Runs a task off the main server thread. */\n    shift(script) {\n        switch (exports.env.name) {\n            case 'bukkit':\n                return new Promise((resolve, reject) => {\n                    exports.env.content.server.getScheduler().runTaskAsynchronously(exports.env.content.plugin, new exports.env.content.Runnable(async () => {\n                        try {\n                            resolve(await script());\n                        }\n                        catch (error) {\n                            reject(error);\n                        }\n                    }));\n                });\n            case 'minestom':\n                return new Promise(async (resolve, reject) => {\n                    try {\n                        resolve(await script());\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                });\n        }\n    }\n};\n/** It's even more complicated. */\nfunction chain(input, handler) {\n    const loop = (input) => handler(input, loop);\n    return loop(input);\n}\nexports.chain = chain;\n/** Registers a custom command to the server. */\nfunction command(options) {\n    switch (exports.env.name) {\n        case 'bukkit': {\n            exports.env.content.plugin.register(options.namespace || exports.env.content.plugin.getName(), options.name, options.aliases || [], options.permission || '', options.message || '', (sender, label, args) => {\n                try {\n                    if (!options.permission || sender.hasPermission(options.permission)) {\n                        options.execute && options.execute(sender, ...args);\n                    }\n                    else {\n                        sender.sendMessage(options.message || '');\n                    }\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to execute the \"${label}\" command!`);\n                    console.error(error.stack || error.message || error);\n                }\n            }, (sender, alias, args) => {\n                try {\n                    return (options.tabComplete && options.tabComplete(sender, ...args)) || [];\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to tab-complete the \"${alias}\" command!`);\n                    console.error(error.stack || error.message || error);\n                    return [];\n                }\n            });\n            break;\n        }\n        case 'minestom': {\n            const command = new exports.env.content.Command(options.name);\n            command.addSyntax((sender, context) => {\n                try {\n                    options.execute && options.execute(sender, ...context.getInput().split(' ').slice(1));\n                }\n                catch (error) {\n                    console.error(`An error occured while attempting to execute the \"${options.name}\" command!`);\n                    console.error(error.stack || error.message || error);\n                }\n            }, exports.env.content.ArgumentType\n                .StringArray('tab-complete')\n                .setSuggestionCallback((sender, context, suggestion) => {\n                for (const completion of options.tabComplete(sender, ...context.getInput().split(' ').slice(1)) ||\n                    []) {\n                    suggestion.addEntry(new exports.env.content.SuggestionEntry(completion));\n                }\n            }));\n            exports.env.content.registry.register(command);\n        }\n    }\n}\nexports.command = command;\n/** A simple task scheduler. */\nexports.task = {\n    /** Cancels a previously scheduled task. */\n    cancel(handle) {\n        exports.session.task.list.delete(handle);\n    },\n    /** Schedules a task to run infinitely at a set interval. */\n    interval(script, period = 0, ...args) {\n        const future = exports.task.timeout((...args) => {\n            future.tick += Math.ceil(period < 1 ? 1 : period);\n            script(...args);\n        }, 0, ...args);\n        return future;\n    },\n    /** Schedules a task to run after a set timeout. */\n    timeout(script, period = 0, ...args) {\n        const future = { tick: exports.session.task.tick + Math.ceil(period < 0 ? 0 : period), args, script };\n        exports.session.task.list.add(future);\n        return future;\n    }\n};\nexports.context = (() => {\n    try {\n        /* grakkit v5 */\n        return {\n            /** Creates a new context and returns its instance. If `type` is file, `content` refers to a JS file path relative to the JS root folder. If `type` is script, `content` refers to a piece of JS code. */\n            create(type, content, meta) {\n                return Grakkit[`${type}Instance`](content, meta);\n            },\n            /** Destroys the currently running context. */\n            destroy() {\n                Grakkit.destroy();\n            },\n            emit(channel, message) {\n                Grakkit.emit(channel, message);\n            },\n            meta: Grakkit.getMeta(),\n            off(channel, listener) {\n                return Grakkit.off(channel, listener);\n            },\n            on: ((channel, listener) => {\n                if (listener) {\n                    return Grakkit.on(channel, listener);\n                }\n                else {\n                    return new Promise(resolve => {\n                        const dummy = (response) => {\n                            exports.context.off(channel, dummy);\n                            resolve(response);\n                        };\n                        exports.context.on(channel, dummy);\n                    });\n                }\n            }),\n            swap() {\n                push(Grakkit.swap);\n            }\n        };\n    }\n    catch (error) {\n        /* grakkit v4 */\n        const channels = {};\n        const messages = [];\n        exports.task.interval(() => {\n            for (const message of messages.splice(0, messages.length)) {\n                if (message.channel in channels) {\n                    for (const listener of channels[message.channel]) {\n                        try {\n                            listener(message.content);\n                        }\n                        catch (error) {\n                            console.error('An error occured while attempting to listen for a message!');\n                            console.error(error.stack || error.message || error);\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            create() {\n                throw 'Your current version of Grakkit does not support creating new contexts!';\n            },\n            destroy() {\n                throw 'The primary instance cannot be destroyed!';\n            },\n            emit(channel, content) {\n                messages.push({ channel, content });\n            },\n            meta: 'grakkit',\n            off(channel, listener) {\n                if (channel in channels) {\n                    const list = channels[channel];\n                    list.includes(listener) && list.splice(list.indexOf(listener), 1);\n                }\n            },\n            on: ((channel, listener) => {\n                if (listener) {\n                    channels[channel] || (channels[channel] = []).push(listener);\n                }\n                else {\n                    return new Promise(resolve => {\n                        const dummy = (response) => {\n                            exports.context.off(channel, dummy);\n                            resolve(response);\n                        };\n                        exports.context.on(channel, dummy);\n                    });\n                }\n            }),\n            swap() {\n                push(Grakkit.swap);\n            }\n        };\n    }\n})();\n/** Stores data on a per-path basis. */\nfunction data(path, ...more) {\n    const name = Paths.get(path, ...more).normalize().toString();\n    if (exports.session.data.has(name)) {\n        return exports.session.data.get(name);\n    }\n    else {\n        const value = file(exports.root, 'data', `${name}.json`).json() || {};\n        exports.session.data.set(name, value);\n        return value;\n    }\n}\nexports.data = data;\n/** The environment that this module is currently running in. */\nexports.env = (() => {\n    try {\n        //@ts-expect-error\n        const Bukkit = type('org.bukkit.Bukkit');\n        /* bukkit detected */\n        const manager = Bukkit.getPluginManager();\n        const plugin = manager.getPlugin('grakkit');\n        Grakkit.hook(() => {\n            //@ts-expect-error\n            type('org.bukkit.event.HandlerList').unregisterAll(plugin);\n        });\n        return {\n            content: {\n                //@ts-expect-error\n                EventPriority: type('org.bukkit.event.EventPriority'),\n                //@ts-expect-error\n                instance: new (Java.extend(type('org.bukkit.event.Listener'), {}))(),\n                manager,\n                plugin,\n                Runnable: type('java.lang.Runnable'),\n                server: Bukkit.getServer()\n            },\n            name: 'bukkit'\n        };\n    }\n    catch (error) {\n        try {\n            //@ts-expect-error\n            const MinecraftServer = type('net.minestom.server.MinecraftServer');\n            /* minestom detected */\n            const manager = MinecraftServer.getExtensionManager();\n            const extension = manager.getExtension('grakkit');\n            return {\n                content: {\n                    //@ts-expect-error\n                    ArgumentType: type('net.minestom.server.command.builder.arguments.ArgumentType'),\n                    //@ts-expect-error\n                    Command: type('net.minestom.server.command.builder.Command'),\n                    extension,\n                    manager,\n                    node: extension.getEventNode(),\n                    registry: MinecraftServer.getCommandManager(),\n                    server: MinecraftServer,\n                    //@ts-expect-error\n                    SuggestionEntry: type('net.minestom.server.command.builder.suggestion.SuggestionEntry')\n                },\n                name: 'minestom'\n            };\n        }\n        catch (error) {\n            return { name: 'unknown', content: {} };\n        }\n    }\n})();\n/** Attaches one or more listeners to a server event. */\nfunction event(name, ...listeners) {\n    switch (exports.env.name) {\n        case 'bukkit':\n            {\n                let list;\n                if (exports.session.event.has(name)) {\n                    list = exports.session.event.get(name);\n                }\n                else {\n                    list = new Set();\n                    exports.session.event.set(name, list);\n                }\n                const targets = new Set();\n                for (const listener of listeners) {\n                    if (typeof listener === 'function') {\n                        targets.has('HIGHEST') || targets.add('HIGHEST');\n                    }\n                    else {\n                        targets.has(listener.priority) || targets.add(listener.priority);\n                    }\n                }\n                for (const listener of list) {\n                    if (typeof listener === 'function') {\n                        targets.has('HIGHEST') && targets.delete('HIGHEST');\n                    }\n                    else {\n                        targets.has(listener.priority) && targets.delete(listener.priority);\n                    }\n                }\n                for (const target of targets) {\n                    const emitter = type(name);\n                    exports.env.content.manager.registerEvent(\n                    // @ts-expect-error\n                    emitter.class, exports.env.content.instance, exports.env.content.EventPriority.valueOf(target), (x, signal) => {\n                        if (signal instanceof emitter) {\n                            try {\n                                for (const listener of list) {\n                                    if (typeof listener === 'function') {\n                                        target === 'HIGHEST' && listener(signal);\n                                    }\n                                    else {\n                                        target === listener.priority && listener.script(signal);\n                                    }\n                                }\n                            }\n                            catch (error) {\n                                console.error(`An error occured while attempting to handle the \"${name}\" event!`);\n                                console.error(error.stack || error.message || error);\n                            }\n                        }\n                    }, exports.env.content.plugin);\n                }\n                for (const listener of listeners)\n                    list.has(listener) || list.add(listener);\n            }\n            break;\n        case 'minestom':\n            {\n                let list;\n                if (exports.session.event.has(name)) {\n                    list = exports.session.event.get(name);\n                }\n                else {\n                    list = new Set();\n                    exports.session.event.set(name, list);\n                }\n                if (list.size === 0) {\n                    const emitter = type(name);\n                    // @ts-expect-error\n                    exports.env.content.node.addListener(emitter.class, (signal) => {\n                        try {\n                            for (const listener of list) {\n                                if (typeof listener === 'function') {\n                                    listener(signal);\n                                }\n                                else {\n                                    listener.script(signal);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            console.error(`An error occured while attempting to handle the \"${name}\" event!`);\n                            console.error(error.stack || error.message || error);\n                        }\n                    });\n                }\n                for (const listener of listeners)\n                    list.has(listener) || list.add(listener);\n            }\n            break;\n    }\n}\nexports.event = event;\n/** Sends a GET request to the given URL. */\nfunction fetch(link) {\n    const response = {\n        json(async) {\n            if (async) {\n                return response.read(true).then(content => JSON.parse(content));\n            }\n            else {\n                try {\n                    return JSON.parse(response.read());\n                }\n                catch (error) {\n                    throw error;\n                }\n            }\n        },\n        //@ts-expect-error\n        read(async) {\n            if (async) {\n                return exports.desync.request(aux, { link, operation: 'fetch.read' });\n            }\n            else {\n                return new Scanner(response.stream()).useDelimiter('\\\\A').next();\n            }\n        },\n        stream() {\n            return new URL(link).openStream();\n        }\n    };\n    return response;\n}\nexports.fetch = fetch;\n/** A utility wrapper for paths and files. */\nfunction file(path, ...more) {\n    path = typeof path === 'string' ? path : 'io' in path ? path.path : path.getPath();\n    const io = Paths.get(path, ...more).normalize().toFile();\n    const record = {\n        get children() {\n            return record.type === 'folder' ? [...io.listFiles()].map(sub => file(sub.getPath())) : null;\n        },\n        directory() {\n            if (record.type === 'none') {\n                chain(io, (io, loop) => {\n                    const parent = io.getParentFile();\n                    parent && (parent.exists() || loop(parent));\n                    io.mkdir();\n                });\n            }\n            return record;\n        },\n        entry() {\n            record.type === 'none' && record.parent.directory() && io.createNewFile();\n            return record;\n        },\n        get exists() {\n            return io.exists();\n        },\n        file(...path) {\n            return file(io, ...path);\n        },\n        flush() {\n            chain(io, (io, loop) => {\n                const parent = io.getParentFile();\n                parent && parent.isDirectory() && (parent.listFiles()[0] || (parent.delete() && loop(parent)));\n            });\n            return record;\n        },\n        io,\n        json(async) {\n            if (async) {\n                return record.read(true).then(content => JSON.parse(content));\n            }\n            else {\n                try {\n                    return JSON.parse(record.read());\n                }\n                catch (error) {\n                    return null;\n                }\n            }\n        },\n        get name() {\n            return io.getName();\n        },\n        get parent() {\n            return record.file('..');\n        },\n        get path() {\n            return exports.regex.replace(io.getPath(), '(\\\\\\\\)', '/');\n        },\n        //@ts-expect-error\n        read(async) {\n            if (async) {\n                return exports.desync.request(aux, { operation: 'file.read', path: record.path });\n            }\n            else {\n                return record.type === 'file' ? new JavaString(Files.readAllBytes(io.toPath())).toString() : null;\n            }\n        },\n        remove() {\n            chain(io, (io, loop) => {\n                io.isDirectory() && [...io.listFiles()].forEach(loop);\n                io.exists() && io.delete();\n            });\n            return record.flush();\n        },\n        get type() {\n            return io.isDirectory() ? 'folder' : io.exists() ? 'file' : 'none';\n        },\n        //@ts-expect-error\n        write(content, async) {\n            if (async) {\n                return exports.desync.request(aux, { content, operation: 'file.write', path: record.path }).then(() => record);\n            }\n            else {\n                record.type === 'file' && Files.write(io.toPath(), new JavaString(content).getBytes());\n                return record;\n            }\n        }\n    };\n    return record;\n}\nexports.file = file;\n/** Imports classes from external files. */\nfunction load(path, name) {\n    if (exports.session.load.has(name)) {\n        return exports.session.load.get(name);\n    }\n    else {\n        const source = file(path);\n        if (source.exists) {\n            const value = Grakkit.load(source.io, name);\n            exports.session.load.set(name, value);\n            return value;\n        }\n        else {\n            throw new ReferenceError(`The file \"${source.path}\" does not exist!`);\n        }\n    }\n}\nexports.load = load;\n/** Runs a script on the next tick. */\nfunction push(script) {\n    Grakkit.push(script);\n}\nexports.push = push;\n/** Tools for using regex patterns. */\nexports.regex = {\n    test(input, expression) {\n        //@ts-expect-error\n        return input.matches(expression);\n    },\n    replace(input, expression, replacement) {\n        //@ts-expect-error\n        return Pattern.compile(expression).matcher(input).replaceAll(replacement);\n    }\n};\n/** Reloads the JS environment. */\nfunction reload() {\n    push(Grakkit.reload || Grakkit.swap);\n}\nexports.reload = reload;\n/** The root folder of the environment. */\nexports.root = file(Grakkit.getRoot());\n/** Recursively removes or replaces the circular references in an object. */\nfunction simplify(object, placeholder, objects) {\n    if (object && typeof object === 'object') {\n        objects || (objects = new Set());\n        if (objects.has(object)) {\n            return placeholder;\n        }\n        else {\n            objects.add(object);\n            const output = typeof object[Symbol.iterator] === 'function' ? [] : {};\n            for (const key in object)\n                output[key] = simplify(object[key], placeholder, new Set(objects));\n            return output;\n        }\n    }\n    else {\n        return object;\n    }\n}\nexports.simplify = simplify;\nfunction sync(script) {\n    return new Promise((resolve, reject) => {\n        Grakkit.sync(() => script().then(resolve).catch(reject));\n    });\n}\nexports.sync = sync;\nchain(void 0, (none, next) => {\n    Grakkit.push(next);\n    for (const task of exports.session.task.list) {\n        if (exports.session.task.tick > task.tick) {\n            exports.session.task.list.delete(task);\n        }\n        else if (exports.session.task.tick === task.tick) {\n            try {\n                task.script(...task.args);\n            }\n            catch (error) {\n                console.error('An error occured while attempting to execute a task!');\n                console.error(error.stack || error.message || error);\n            }\n        }\n    }\n    ++exports.session.task.tick;\n});\nGrakkit.hook(() => {\n    for (const [name] of exports.session.data) {\n        file(exports.root, 'data', `${name}.json`).entry().write(JSON.stringify(simplify(exports.session.data.get(name))));\n    }\n});\nconst aux = `${__dirname}/async.js`;\nconst charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst promise = Promise.resolve();\nObject.assign(globalThis, {\n    atob(data) {\n        var str = exports.regex.replace(String(data), '[=]+$', '');\n        if (str.length % 4 === 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (var bc = 0, bs, buffer, idx = 0, output = ''; (buffer = str.charAt(idx++)); ~buffer && ((bs = bc % 4 ? bs * 64 + buffer : buffer), bc++ % 4)\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0) {\n            buffer = charset.indexOf(buffer);\n        }\n        return output;\n    },\n    btoa(data) {\n        var str = String(data);\n        for (var block, charCode, idx = 0, map = charset, output = ''; str.charAt(idx | 0) || ((map = '='), idx % 1); output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))) {\n            charCode = str.charCodeAt((idx += 3 / 4));\n            if (charCode > 0xff) {\n                throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n            }\n            block = (block << 8) | charCode;\n        }\n        return output;\n    },\n    clearImmediate(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    clearInterval(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    clearTimeout(handle) {\n        exports.task.cancel(exports.session.poly.list.get(handle));\n    },\n    queueMicrotask(callback) {\n        promise.then(callback).catch(error => {\n            exports.task.timeout(() => {\n                throw error;\n            });\n        });\n    },\n    setInterval(script, period = 0, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.interval(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, Math.ceil(period / 50), ...args));\n        return exports.session.poly.index++;\n    },\n    setTimeout(script, period = 0, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.timeout(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, Math.ceil(period / 50), ...args));\n        return exports.session.poly.index++;\n    },\n    setImmediate(script, ...args) {\n        exports.session.poly.list.set(exports.session.poly.index, exports.task.timeout(typeof script === 'string' ? () => Polyglot.eval('js', script) : script, 0, ...args));\n        return exports.session.poly.index++;\n    }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n// fork from https://github.com/facebook/create-react-app/blob/main/packages/react-dev-utils/formatWebpackMessages.js\r\nconst friendlySyntaxErrorLabel = 'Syntax error:'\r\n\r\nfunction isLikelyASyntaxError(message: any) {\r\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1\r\n}\r\n\r\n// Cleans up webpack error messages.\r\nfunction formatMessage(message: any) {\r\n  let lines: string[] = []\r\n\r\n  if (typeof message === 'string') {\r\n    lines = message.split('\\n')\r\n  } else if ('message' in message) {\r\n    lines = message['message'].split('\\n')\r\n  } else if (Array.isArray(message)) {\r\n    message.forEach((message) => {\r\n      if ('message' in message) {\r\n        lines = message['message'].split('\\n')\r\n      }\r\n    })\r\n  }\r\n\r\n  // Strip webpack-added headers off errors/warnings\r\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\r\n  lines = lines.filter((line) => !/Module [A-z ]+\\(from/.test(line))\r\n\r\n  // Transform parsing error into syntax error\r\n  // TODO: move this to our ESLint formatter?\r\n  lines = lines.map((line) => {\r\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line)\r\n    if (!parsingError) {\r\n      return line\r\n    }\r\n    const [, errorLine, errorColumn, errorMessage] = parsingError\r\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`\r\n  })\r\n\r\n  message = lines.join('\\n')\r\n  // Smoosh syntax errors (commonly found in CSS)\r\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`)\r\n  // Clean up export errors\r\n  message = message.replace(\r\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$2'.`\r\n  )\r\n  message = message.replace(\r\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\r\n  )\r\n  message = message.replace(\r\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\r\n  )\r\n  lines = message.split('\\n')\r\n\r\n  // Remove leading newline\r\n  if (lines.length > 2 && lines[1].trim() === '') {\r\n    lines.splice(1, 1)\r\n  }\r\n  // Clean up file name\r\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1')\r\n\r\n  // Cleans up verbose \"module not found\" messages for files and packages.\r\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\r\n    lines = [\r\n      lines[0],\r\n      lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:'),\r\n    ]\r\n  }\r\n\r\n  message = lines.join('\\n')\r\n  // Internal stacks are generally useless so we strip them... with the\r\n  // exception of stacks containing `webpack:` because they're normally\r\n  // from user code generated by webpack. For more information see\r\n  // https://github.com/facebook/create-react-app/pull/1050\r\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, '') // at ... ...:x:y\r\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '') // at <anonymous>\r\n  lines = message.split('\\n')\r\n\r\n  // Remove duplicated newlines\r\n  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim())\r\n\r\n  // Reassemble the message\r\n  message = lines.join('\\n')\r\n  return message.trim()\r\n}\r\n\r\n/**\r\n * This takes the webpack stats and makes it more presentable.\r\n */\r\nexport function formatWebpackMessages(json: any) {\r\n  const formattedErrors = json.errors.map(formatMessage)\r\n  const formattedWarnings = json.warnings.map(formatMessage)\r\n  const result = { errors: formattedErrors, warnings: formattedWarnings }\r\n  if (result.errors.some(isLikelyASyntaxError)) {\r\n    // If there are any syntax errors, show just them.\r\n    result.errors = result.errors.filter(isLikelyASyntaxError)\r\n  }\r\n  return result\r\n}\r\n","import { core } from '@grakkit/stdlib-paper'\r\n\r\nexport class WebServer {\r\n  static app: undefined | { listen: Function; stop: Function; get: Function } = undefined\r\n\r\n  static start = (jarFile: string = 'java-express-0.0.10.jar', className: string = 'express.Express') => {\r\n    if (WebServer.app) return\r\n\r\n    const Express = core.load(`./plugins/grakkit/${jarFile}`, className)\r\n\r\n    if (!Express) {\r\n      throw new Error(`Unable to load \"${jarFile}\" in the \"plugins/grakkit\" folder.`)\r\n    }\r\n\r\n    const app = new Express()\r\n\r\n    app.use((req: any, res: any, next: any) => {\r\n      res.setHeader('Access-Control-Allow-Origin', '*')\r\n    })\r\n\r\n    WebServer.app = app\r\n  }\r\n\r\n  static stop = () => {\r\n    if (!WebServer.app) return\r\n\r\n    WebServer.app.stop()\r\n  }\r\n\r\n  static listen = (port: number) => {\r\n    if (!WebServer.app) throw new Error('WebServer is not active.')\r\n\r\n    return WebServer.app.listen(port)\r\n  }\r\n\r\n  static get = (uri: string, callback: (req: any, res: any) => any) => {\r\n    if (!WebServer.app) throw new Error('WebServer is not active.')\r\n\r\n    return WebServer.app.get(uri, callback)\r\n  }\r\n}\r\n","import { core } from '@grakkit/stdlib-paper'\r\nimport { WebServer } from './webServer'\r\n\r\n/**\r\n * This will initialize a webserver on port 4000 during development mode.\r\n * When this receives a response at `/reload`, it'll start reloading the\r\n * server.\r\n *\r\n * This is not recommended for production use.\r\n */\r\nexport function initializeAutoReload() {\r\n  WebServer.start()\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    WebServer.listen(4000)\r\n\r\n    WebServer.get('/reload', (req, res) => {\r\n      res.send('done')\r\n\r\n      reload()\r\n    })\r\n\r\n    console.log('Grakkit-Boilerplate-Util: Development Mode')\r\n  } else {\r\n    console.log('Grakkit-Boilerplate-Util: Production Mode')\r\n  }\r\n}\r\n\r\nfunction reload() {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    WebServer.stop()\r\n  }\r\n\r\n  core.reload()\r\n  console.log('Grakkit-Boilerplate-Util: Reloaded')\r\n}\r\n"],"names":["Object","defineProperty","exports","value","format","circular","array","stdlib_1","Class","type","Iterable","Iterator","Spliterator","object","Array","output","forEach","push","forEachRemaining","Symbol","error","message","stack","split","slice","startsWith","reason","map","set","join","condense","toString","call","getCanonicalName","string","clazz","getClass","class","JSON","stringify","getOwnPropertyNames","key","getOwnPropertySymbols","regex","replace","list","command","name","permission","execute","context","args","self","globalThis","hasOwnProperty","result","Polyglot","eval","whoops","env","sendMessage","tabComplete","body","index","scope","valid","bracket","comment","property","input","length","char","includes","test","properties","constructor","prototype","sort","filter","element","toLowerCase","sync","simplify","root","reload","load","file","fetch","event","data","task","chain","async","session","assign","Core","Grakkit","has","get","Java","Map","poly","Set","tick","Files","JavaString","Paths","Pattern","Scanner","URL","UUID","handler","loop","path","more","getPath","io","normalize","toFile","record","children","listFiles","sub","directory","parent","getParentFile","exists","mkdir","entry","createNewFile","flush","isDirectory","delete","json","read","then","content","parse","getName","Promise","resolve","uuid","randomUUID","on","create","base","operation","open","readAllBytes","toPath","remove","write","getBytes","script","placeholder","objects","add","iterator","reject","server","getScheduler","runTaskAsynchronously","plugin","Runnable","options","register","namespace","aliases","sender","label","hasPermission","console","alias","Command","addSyntax","getInput","ArgumentType","StringArray","setSuggestionCallback","suggestion","completion","addEntry","SuggestionEntry","registry","cancel","handle","interval","period","future","timeout","Math","ceil","meta","getMeta","destroy","emit","channel","off","listener","channels","messages","splice","indexOf","dummy","Bukkit","manager","getPluginManager","getPlugin","hook","unregisterAll","EventPriority","instance","extend","getServer","MinecraftServer","getExtensionManager","extension","getExtension","node","getEventNode","getCommandManager","listeners","targets","priority","target","emitter","registerEvent","valueOf","x","signal","size","addListener","link","response","stream","useDelimiter","next","openStream","source","ReferenceError","expression","matches","replacement","compile","matcher","replaceAll","swap","getRoot","catch","none","charset","promise","atob","str","String","Error","bs","buffer","bc","idx","charAt","fromCharCode","btoa","block","charCode","charCodeAt","clearImmediate","clearInterval","clearTimeout","queueMicrotask","callback","setInterval","setTimeout","setImmediate","addons","stdlib","core","module","desync","request","aux","provider","status","getAbsolutePath","shift","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","enumerable","obj","prop","r","toStringTag","friendlySyntaxErrorLabel","isLikelyASyntaxError","formatMessage","lines","isArray","line","parsingError","exec","errorLine","errorColumn","errorMessage","trim","arr","formatWebpackMessages","errors","warnings","some","WebServer","initializeAutoReload","start","log","jarFile","className","app","Express","use","req","res","setHeader","stop","port","listen","uri"],"sourceRoot":""}